<Window x:Class="SubtitleComposer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SubtitleComposer"
        xmlns:converters="clr-namespace:SubtitleComposer.Converters"
        mc:Ignorable="d"
        Title="Subtitle Composer" Height="800" Width="1280" MinWidth="480" MinHeight="640"
        WindowStartupLocation="CenterScreen">

    <!-- MIT License

    Copyright (c) 2023 Bartosz Kaczorowski

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE. -->
    
    <Window.Resources>
        <converters:VisibilityConverter x:Key="VisibilityConverter"/>
        <converters:HeaderConverter x:Key="HeaderConverter"/>
        <converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter"/>
        <converters:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
        <converters:TimeSpanToDoubleConverter x:Key="TimeSpanToDoubleConverter"/>
        
        <ContextMenu x:Key="MainContextMenu">
            <MenuItem Header="Add" Click="MenuItem_Add_Click"/>
            <MenuItem Header="Add after" Click="MenuItem_AddAfter_Click"/>
            <MenuItem Header="Delete" Click="MenuItem_Delete_Click"/>
        </ContextMenu>

        <Style x:Key="OpenText" TargetType="MenuItem">
            <Setter Property="Header" Value="{Binding}"/>
            <Setter Property="Command" Value="local:CustomCommands.OpenText"/>
            <Setter Property="CommandParameter" Value="{Binding}"/>
        </Style>
        <Style x:Key="OpenTranslation" TargetType="MenuItem">
            <Setter Property="Header" Value="{Binding}"/>
            <Setter Property="Command" Value="local:CustomCommands.OpenTranslation"/>
            <Setter Property="CommandParameter" Value="{Binding}"/>
        </Style>
        <Style x:Key="SaveText" TargetType="MenuItem">
            <Setter Property="Header" Value="{Binding}"/>
            <Setter Property="Command" Value="local:CustomCommands.SaveText"/>
            <Setter Property="CommandParameter" Value="{Binding}"/>
        </Style>
        <Style x:Key="SaveTranslation" TargetType="MenuItem">
            <Setter Property="Header" Value="{Binding}"/>
            <Setter Property="Command" Value="local:CustomCommands.SaveTranslation"/>
            <Setter Property="CommandParameter" Value="{Binding}"/>
        </Style>

    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="local:CustomCommands.Open" CanExecute="CanExecute" Executed="Open_Executed"/>
        <CommandBinding Command="local:CustomCommands.Play" CanExecute="Play_CanExecute" Executed="Play_Executed"/>
        <CommandBinding Command="local:CustomCommands.Pause" CanExecute="Pause_CanExecute" Executed="Pause_Executed"/>
        <CommandBinding Command="local:CustomCommands.Stop" CanExecute="CanExecute" Executed="Stop_Executed"/>
        <CommandBinding Command="local:CustomCommands.About" CanExecute="CanExecute" Executed="About_Executed"/>
        <CommandBinding Command="local:CustomCommands.Exit" CanExecute="CanExecute" Executed="Exit_Executed"/>
        <CommandBinding Command="local:CustomCommands.OpenText" CanExecute="CanExecute" Executed="OpenText_Executed"/>
        <CommandBinding Command="local:CustomCommands.OpenTranslation" CanExecute="CanExecute" Executed="OpenTranslation_Executed"/>
        <CommandBinding Command="local:CustomCommands.SaveText" CanExecute="CanExecute" Executed="SaveText_Executed"/>
        <CommandBinding Command="local:CustomCommands.SaveTranslation" CanExecute="CanExecute" Executed="SaveTranslation_Executed"/>
        <CommandBinding Command="local:CustomCommands.Translation" CanExecute="CanExecute" Executed="Translation_Executed"/>
    </Window.CommandBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="100" MinHeight="100"/>
        </Grid.RowDefinitions>
        
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="Open..." Command="local:CustomCommands.Open"/>
                <Separator/>
                <MenuItem Header="Exit..." Command="local:CustomCommands.Exit"/>
            </MenuItem>
            
            <MenuItem Header="Subtitles">
                <MenuItem Header="Open...">
                    <MenuItem Header="Text..."
                              ItemsSource="{Binding Plugins}" 
                              ItemContainerStyle="{StaticResource OpenText}"/>
                    <MenuItem Header="Translation..."
                              ItemsSource="{Binding Plugins}"
                              IsEnabled="{Binding Source={x:Reference Name=TranslationItem}, Path=IsChecked}"
                              ItemContainerStyle="{StaticResource OpenTranslation}"/>
                </MenuItem>
                <MenuItem Header="Save...">
                    <MenuItem Header="Text..."
                              ItemsSource="{Binding Plugins}"
                              ItemContainerStyle="{StaticResource SaveText}"/>
                    <MenuItem Header="Translation..."
                          ItemsSource="{Binding Plugins}"
                          IsEnabled="{Binding Source={x:Reference Name=TranslationItem}, Path=IsChecked}"
                          ItemContainerStyle="{StaticResource SaveTranslation}"/>
                </MenuItem>

                <Separator/>
                <MenuItem Name="TranslationItem" Header="Translation" Command="local:CustomCommands.Translation"/>
            </MenuItem>

            <MenuItem Header="Help">
                <MenuItem Header="About..." Command="local:CustomCommands.About"/>
            </MenuItem>
        </Menu>
        
        <GridSplitter Grid.Row ="2" Height="5" ResizeDirection="Rows" HorizontalAlignment="Stretch"/>
        
        <GridSplitter Grid.Row ="4" Height="5" ResizeDirection="Rows" HorizontalAlignment="Stretch"/>

        <Grid Grid.Row="1" Background="Black">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <MediaElement Grid.Row="0" Name="Player" LoadedBehavior="Manual" Stretch="Uniform"
                          MouseLeftButtonDown="PlayPause_MouseClick"
                          MouseWheel="Volume_MouseWheel"/>
            
            <TextBlock Grid.Row="0" Name ="Captions" HorizontalAlignment="Center" VerticalAlignment="Bottom" 
                          Foreground="White" FontSize="20" Padding="5" TextWrapping="Wrap" TextAlignment="Center">
                <TextBlock.Background>
                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                </TextBlock.Background>
            </TextBlock>
            
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <StatusBar Grid.Column="1">
                    <StatusBar.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </StatusBar.ItemsPanel>
                    
                    <StatusBarItem Grid.Column="0">
                        <Button Command="local:CustomCommands.Play">
                            <Image Source="./Resources/play.png" Height="30"/>
                        </Button>
                    </StatusBarItem>
                    
                    <StatusBarItem Grid.Column="1">
                        <Button Command="local:CustomCommands.Pause">
                            <Image Source="./Resources/pause.png" Height="30"/>
                        </Button>
                    </StatusBarItem>
                    
                    <StatusBarItem Grid.Column="2">
                        <Button Command="local:CustomCommands.Stop">
                            <Image Source="./Resources/stop.png" Height="30"/>
                        </Button>
                    </StatusBarItem>
                    
                    <StatusBarItem Grid.Column="3">
                        <TextBlock Text="{Binding ElementName=MainSlider, Path=Value,
                            Converter={StaticResource DoubleToStringConverter}}"/>
                    </StatusBarItem>
                    
                    <StatusBarItem Grid.Column="4" HorizontalContentAlignment="Stretch">
                        <Slider Name="MainSlider"
                                Thumb.DragStarted="MainSlider_DragStarted"
                                Thumb.DragCompleted="MainSlider_DragCompleted"/>
                    </StatusBarItem>

                    <StatusBarItem Grid.Column="5" MouseWheel="Volume_MouseWheel">
                        <ProgressBar Name="VolumeBar" Width="50" Height="15" Maximum="1"
                                     Value="{Binding ElementName=Player, Path=Volume}"/>
                    </StatusBarItem>
                </StatusBar>
            </Grid>
        </Grid>
        
        <DataGrid Name="MainDataGrid" Grid.Row="3" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False"
                  CanUserAddRows="True" CanUserSortColumns="False" SelectionUnit="FullRow"
                  ItemsSource="{Binding GridElements}"
                  ContextMenu="{StaticResource MainContextMenu}"
                  SelectionChanged="MainDataGrid_Select">
            
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="ValidationErrorTemplate" Value="{x:Null}"/>
                </Style>
            </DataGrid.RowStyle>
            
            <DataGrid.Columns>
                <DataGridTextColumn Header = "Show Time" Width="Auto" SortDirection="Ascending"
                                    Binding="{Binding Show, UpdateSourceTrigger=PropertyChanged,
                    Delay=500, ValidatesOnDataErrors=True,
                    Converter={StaticResource TimeSpanToStringConverter}}"/>
                <DataGridTextColumn Header = "Hide Time" Width="Auto"
                                    Binding="{Binding Hide, UpdateSourceTrigger=PropertyChanged,
                    Delay=500, ValidatesOnDataErrors=True,
                    Converter={StaticResource TimeSpanToStringConverter}}"/>
                <DataGridTextColumn Header = "Text" Width="*"
                                    Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header = "Translation" Width="*"
                                    Binding="{Binding Translation, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="{Binding Source={x:Reference Name=TranslationItem}, Path=IsChecked,
                    Converter={StaticResource VisibilityConverter}}"/>
            </DataGrid.Columns>
        </DataGrid>
        
        <Grid Grid.Row="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <GroupBox Grid.Column="0" Height="90">
                <Grid Margin="0,5,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition MinWidth="100" Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock Margin="2" Grid.Column="0" Grid.Row="0" Text="Show" FontWeight="Bold"/>
                    <TextBlock Margin="2" Grid.Column="0" Grid.Row="2" Text="Hide" FontWeight="Bold"/>
                    <TextBlock Margin="2" Grid.Column="0" Grid.Row="4" Text="Duration" FontWeight="Bold"/>
                    
                    <TextBox Grid.Column="2" Grid.Row="0" VerticalAlignment="Center"
                             Text="{Binding ElementName=MainDataGrid, Path=SelectedItem.Show,
                        Delay=500, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True,
                        Converter={StaticResource TimeSpanToStringConverter}}"/>
                    <TextBox Grid.Column="2" Grid.Row="2"
                             Text="{Binding ElementName=MainDataGrid, Path=SelectedItem.Hide,
                        Delay=500, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True,
                        Converter={StaticResource TimeSpanToStringConverter}}"/>
                    <TextBox Grid.Column="2" Grid.Row="4"
                             Text="{Binding ElementName=MainDataGrid, Path=SelectedItem.Duration,
                        Delay=500, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True,
                        Converter={StaticResource TimeSpanToStringConverter}}"/>
                </Grid>
            </GroupBox>
            
            <UniformGrid Grid.Column="1" Rows="1">
                <GroupBox Grid.Column="0"
                          Header="{Binding ElementName=TextBox, Path=Text,
                    Converter={StaticResource HeaderConverter}, ConverterParameter='text'}" >
                    <TextBox Name="TextBox" TextWrapping="Wrap"
                             VerticalScrollBarVisibility="Auto" HorizontalContentAlignment="Center"
                             Text="{Binding ElementName=MainDataGrid, Path=SelectedItem.Text,
                        UpdateSourceTrigger=PropertyChanged}"/>
                </GroupBox>
                
                <GroupBox Grid.Column="1"
                          Header="{Binding ElementName=TranslationBox, Path=Text,
                    Converter={StaticResource HeaderConverter}, ConverterParameter='translation'}"
                          Visibility="{Binding Source={x:Reference Name=TranslationItem}, Path=IsChecked,
                    Converter={StaticResource VisibilityConverter}}">
                    <TextBox Name="TranslationBox" TextWrapping="Wrap"
                             VerticalScrollBarVisibility="Auto" HorizontalContentAlignment="Center"
                             Text="{Binding ElementName=MainDataGrid, Path=SelectedItem.Translation,
                        UpdateSourceTrigger=PropertyChanged}"/>
                </GroupBox>
            </UniformGrid>
        </Grid>
    </Grid>
</Window>
